{"filter":false,"title":"check-if-two-trees-are-mirror.cpp","tooltip":"/articles/check-if-two-trees-are-mirror.cpp","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":5,"column":1},"action":"remove","lines":["#include <iostream>","","int main()","{","\tstd::cout << \"Hello from AWS Cloud9!\" << std::endl;","}"],"id":1},{"start":{"row":0,"column":0},"end":{"row":60,"column":2},"action":"insert","lines":["// C++ program to check if two trees are mirror ","// of each other ","#include<bits/stdc++.h> ","using namespace std; ","  ","/* A binary tree node has data, pointer to ","   left child and a pointer to right child */","struct Node ","{ ","    int data; ","    Node* left, *right; ","}; ","  ","/* Given two trees, return true if they are ","   mirror of each other */","int areMirror(Node* a, Node* b) ","{ ","    /* Base case : Both empty */","    if (a==NULL && b==NULL) ","        return true; ","  ","    // If only one is empty ","    if (a==NULL || b == NULL) ","        return false; ","  ","    /* Both non-empty, compare them recursively ","     Note that in recursive calls, we pass left ","     of one tree and right of other tree */","    return  a->data == b->data && ","            areMirror(a->left, b->right) && ","            areMirror(a->right, b->left); ","} ","  ","/* Helper function that allocates a new node */","Node* newNode(int data) ","{ ","    Node* node = new Node; ","    node->data  = data; ","    node->left  =  node->right  = NULL; ","    return(node); ","} ","  ","/* Driver program to test areMirror() */","int main() ","{ ","    Node *a = newNode(1); ","    Node *b = newNode(1); ","    a->left = newNode(2); ","    a->right = newNode(3); ","    a->left->left  = newNode(4); ","    a->left->right = newNode(5); ","  ","    b->left = newNode(3); ","    b->right = newNode(2); ","    b->right->left = newNode(5); ","    b->right->right = newNode(4); ","  ","    areMirror(a, b)? cout << \"Yes\" : cout << \"No\"; ","  ","    return 0; ","} "]}]]},"ace":{"folds":[],"scrolltop":651,"scrollleft":0,"selection":{"start":{"row":42,"column":35},"end":{"row":42,"column":35},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1562644666609,"hash":"dd0e3b802346e2d0786f1bae8bf15817855173e6"}