{"filter":false,"title":"*permutations-of-a-given-string-no-inbuilt.py","tooltip":"/String/*permutations-of-a-given-string-no-inbuilt.py","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":20,"column":0},"end":{"row":20,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":6,"state":"start","mode":"ace/mode/python"}},"hash":"3a62ed5f0790f932c56ef6b946c1558551da6448","undoManager":{"mark":14,"position":14,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["\"\"\"","Your module description","\"\"\"",""],"id":1},{"start":{"row":0,"column":0},"end":{"row":34,"column":18},"action":"insert","lines":["# string permutation in lexicographically order with repetition of characters in the string","","def permute(input):","    count_map = {}","    for ch in input:","        if ch in count_map.keys():","            count_map[ch] = count_map[ch] + 1","        else:","            count_map[ch] = 1","","    keys = sorted(count_map)","    str = []","    count = []","    for key in keys:","        str.append(key)","        count.append(count_map[key])","    result = [0 for x in range(len(input))]","    permute_util(str, count, result, 0)","","def permute_util(str, count, result, level):","    if level == len(result):","        print(result)","        return","","    for i in range(len(str)):","        if count[i] == 0:","            continue;","        result[level] = str[i]","        count[i] -= 1","        permute_util(str, count, result, level + 1)","        count[i] += 1","","if __name__ == '__main__':","    input = ['B', 'C', 'A', 'A']","    permute(input)"]}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":1},"action":"insert","lines":["#"],"id":2}],[{"start":{"row":1,"column":1},"end":{"row":1,"column":2},"action":"insert","lines":[" "],"id":3}],[{"start":{"row":1,"column":2},"end":{"row":1,"column":94},"action":"insert","lines":["https://github.com/mission-peace/interview/blob/master/python/recursion/stringpermutation.py"],"id":4}],[{"start":{"row":1,"column":94},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":35,"column":4},"end":{"row":35,"column":6},"action":"insert","lines":["# "],"id":6}],[{"start":{"row":35,"column":34},"end":{"row":36,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":36,"column":4},"end":{"row":36,"column":32},"action":"insert","lines":["input = ['B', 'C', 'A', 'A']"],"id":8}],[{"start":{"row":36,"column":13},"end":{"row":36,"column":31},"action":"remove","lines":["'B', 'C', 'A', 'A'"],"id":9},{"start":{"row":36,"column":13},"end":{"row":36,"column":14},"action":"insert","lines":["'"]},{"start":{"row":36,"column":14},"end":{"row":36,"column":15},"action":"insert","lines":["A"]}],[{"start":{"row":36,"column":15},"end":{"row":36,"column":16},"action":"insert","lines":["'"],"id":10},{"start":{"row":36,"column":16},"end":{"row":36,"column":17},"action":"insert","lines":[","]}],[{"start":{"row":36,"column":17},"end":{"row":36,"column":19},"action":"insert","lines":["''"],"id":11}],[{"start":{"row":36,"column":18},"end":{"row":36,"column":19},"action":"insert","lines":["B"],"id":12}],[{"start":{"row":36,"column":20},"end":{"row":36,"column":21},"action":"insert","lines":[","],"id":13}],[{"start":{"row":36,"column":21},"end":{"row":36,"column":23},"action":"insert","lines":["''"],"id":14}],[{"start":{"row":36,"column":22},"end":{"row":36,"column":23},"action":"insert","lines":["C"],"id":15}]]},"timestamp":1607200663546}