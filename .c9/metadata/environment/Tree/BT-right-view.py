{"filter":false,"title":"BT-right-view.py","tooltip":"/Tree/BT-right-view.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["\"\"\"","Your module description","\"\"\"",""],"id":1},{"start":{"row":0,"column":0},"end":{"row":37,"column":3},"action":"insert","lines":["from queue import Queue","# Definition for a binary tree node.","# class TreeNode:","#     def __init__(self, val=0, left=None, right=None):","#         self.val = val","#         self.left = left","#         self.right = right","","# https://leetcode.com/problems/binary-tree-right-side-view/solution/","","class Solution:","    def rightSideView(self, root: TreeNode) -> List[int]:","        result = []","        if root:","            queue = Queue()","            queue.put_nowait((root, 0))","            while not queue.empty():","                node, d = queue.get_nowait()","                if len(result) == d:","                    result.append(node.val)","                for child in (node.right, node.left, ):","                    if child:","                        queue.put_nowait((child, d + 1))","        return result","        ","        ","'''","result=[]","add (root, 0) to queue; 0 indicates this is level zero","while queue is not empty","\tnode, d = pop queue","\tadd node.val to res if length of res matches height of tree","\titerate over children of node, starting with right child first","\t\tif child exist, add to queue; also increase height + 1 because this next level","\t\tsince we added right child first and left child second, ","\t\twhen we pop queue; we get right child first; since at that time height will match len of result; we ill append","","'''"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":18,"column":36},"end":{"row":18,"column":36},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1608868114923,"hash":"66927815d60b24cdf36c8cbe3d3dd9adbf68c029"}