{"filter":false,"title":"BT-count-nodes.py","tooltip":"/Tree/BT-count-nodes.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["\"\"\"","Your module description","\"\"\"",""],"id":1},{"start":{"row":0,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["\"\"\"","https://leetcode.com/problems/count-complete-tree-nodes/submissions/","\"\"\"","","# Recursive Python program for DFS traversal of Binary Tree","","# A node structure","class Node:","","\t# A utility function to create a new node","\tdef __init__(self, key):","\t\tself.data = key ","\t\tself.left = None","\t\tself.right = None","","\t","def countNodes(root):","    return 1 + countNodes(root.left) + countNodes(root.right) if root else 0","    ","","# Driver program to test above function","root = Node(1)","root.left = Node(2)","root.right = Node(3)","root.left.left = Node(4)","root.left.right = Node(5)","print(countNodes(root))",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":26,"column":23},"end":{"row":26,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1609008817220,"hash":"9f4c257e5e9b7929103eca453613201d7a5401be"}