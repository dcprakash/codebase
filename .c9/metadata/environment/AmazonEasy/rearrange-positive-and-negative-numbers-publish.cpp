{"changed":true,"filter":false,"title":"rearrange-positive-and-negative-numbers-publish.cpp","tooltip":"/AmazonEasy/rearrange-positive-and-negative-numbers-publish.cpp","value":"// A C++ program to put positive \n// numbers at even indexes (0, 2, 4,..) \n// and negative numbers at odd \n// indexes (1, 3, 5, ..) \n#include <iostream> \nusing namespace std; \n\nclass GFG \n{ \n\tpublic: \n\tvoid rearrange(int [],int); \n\tvoid swap(int *,int *); \n\tvoid printArray(int [],int); \n}; \n\n// The main function that rearranges \n// elements of given array. It puts \n// positive elements at even indexes \n// (0, 2, ..) and negative numbers \n// at odd indexes (1, 3, ..). \nvoid GFG :: rearrange(int arr[], int n) \n{ \n\t// The following few lines are \n\t// similar to partition process \n\t// of QuickSort. The idea is to \n\t// consider 0 as pivot and \n\t// divide the array around it. \n\tint i = -1; \n\tfor (int j = 0; j < n; j++) \n\t{ \n\t\tif (arr[j] < 0) \n\t\t{ \n\t\t\ti++; \n\t\t\tswap(&arr[i], &arr[j]); \n\t\t} \n\t} \n\n\t// Now all positive numbers are at \n\t// end and negative numbers at the \n\t// beginning of array. Initialize \n\t// indexes for starting point of \n\t// positive and negative numbers \n\t// to be swapped \n\tint pos = i + 1, neg = 0; \n\n\t// Increment the negative index by \n\t// 2 and positive index by 1, \n\t// i.e., swap every alternate negative \n\t// number with next positive number \n\twhile (pos < n && neg < pos && \n\t\t\t\t\tarr[neg] < 0) \n\t{ \n\t\tswap(&arr[neg], &arr[pos]); \n\t\tpos++; \n\t\tneg += 2; \n\t} \n} \n\n// A utility function \n// to swap two elements \nvoid GFG :: swap(int *a, int *b) \n{ \n\tint temp = *a; \n\t*a = *b; \n\t*b = temp; \n} \n\n// A utility function to print an array \nvoid GFG :: printArray(int arr[], int n) \n{ \n\tfor (int i = 0; i < n; i++) \n\t\tcout << arr[i] << \" \"; \n} \n\n// Driver Code \nint main() \n{ \n\tint arr[] = {-1, 2, -3, 4, \n\t\t\t\t5, 6, -7, 8, 9}; \n\tint n = sizeof(arr) / sizeof(arr[0]); \n\tGFG test; \n\ttest.rearrange(arr, n); \n\ttest.printArray(arr, n); \n\treturn 0; \n} \n\n// This code is contributed\n","undoManager":{"mark":-2,"position":1,"stack":[[{"start":{"row":86,"column":28},"end":{"row":87,"column":25},"action":"remove","lines":["","// by vt_Yogesh Shukla 1 "],"id":2}],[{"start":{"row":86,"column":27},"end":{"row":86,"column":28},"action":"remove","lines":[" "],"id":3}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":86,"column":27},"end":{"row":86,"column":27},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1562789016712}