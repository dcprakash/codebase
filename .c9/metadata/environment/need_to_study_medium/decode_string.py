{"filter":false,"title":"decode_string.py","tooltip":"/need_to_study_medium/decode_string.py","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["\"\"\"","Your module description","\"\"\"",""],"id":1},{"start":{"row":0,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["'''","1. maintain two stacks:","    stack = to keep track of occuring chars","    num_stack = to keep track of occuring numers","    note: stack[1] is char that must be repeated num_stack[1] times","2. while iterating, if we encounrter ']', then pop from above 2 stacks","    store multiplication of 2 stacks in stack[-1] i.e., at last element","'''","","class Solution:","    def decodeString(self, s):","        ","        left = 0","        output = \"\"","        stack = [\"\"]","        num_stack = []","        while left < len(s):","            if s[left].isdigit():       ","                digit = \"\"","                # Convert the string to int as it can double digits","                while s[left].isdigit():","                    digit += s[left]","                    left += 1","                ","                digit_int = int(digit)","                stack.append(\"\")","                num_stack.append(digit_int)                ","            elif s[left] == ']':                    ","                mul_string = num_stack.pop()","                top_str = stack.pop()                    ","                stack[-1] += mul_string * top_str","            else:","                stack[-1] += s[left]","            left += 1       ","","        return stack[0]","","","s = Solution()","string = \"3[a2[c]]\"","print(s.decodeString(string))",""]}],[{"start":{"row":6,"column":71},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"insert","lines":["    "]},{"start":{"row":7,"column":4},"end":{"row":8,"column":0},"action":"insert","lines":["",""]},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":8,"column":4},"end":{"row":8,"column":60},"action":"insert","lines":["https://leetcode.com/problems/decode-string/submissions/"],"id":3}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"remove","lines":["    "],"id":4}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":8,"column":56},"end":{"row":8,"column":56},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1609018402930,"hash":"3b571091cbefb5c17adc81755596a49b513f941c"}